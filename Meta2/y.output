Terminals unused in grammar

   RESERVED


Rules useless in parser due to conflicts

   57 ID_LITS: ID


State 52 conflicts: 1 shift/reduce
State 94 conflicts: 16 shift/reduce
State 107 conflicts: 16 shift/reduce
State 108 conflicts: 16 shift/reduce
State 109 conflicts: 16 shift/reduce
State 110 conflicts: 16 shift/reduce
State 115 conflicts: 4 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: FuncDefDecDec FuncDefDecDec1

    2 FuncDefDecDec: FunctionDefinition
    3              | FunctionDeclaration
    4              | Declaration

    5 FuncDefDecDec1: Empty
    6               | FuncDefDecDec1 FuncDefDecDec

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE

    9 Declaration1: Empty
   10             | Declaration1 Declaration

   11 Statement1: Empty
   12           | Statement1 Statement

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   14 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR

   15 Asterisk: Empty
   16         | Asterisk AST

   17 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration

   18 COMMA_ParameterDeclaration: Empty
   19                           | COMMA_ParameterDeclaration COMMA ParameterDeclaration

   20 ParameterDeclaration: TypeSpec Asterisk
   21                     | TypeSpec Asterisk ID

   22 Declaration: TypeSpec Declarator COMMA_Declarator SEMI

   23 COMMA_Declarator: Empty
   24                 | COMMA_Declarator COMMA Declarator

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID

   28 Declarator: Asterisk ID
   29           | Asterisk ID LSQ INTLIT RSQ

   30 Statement: SEMI
   31          | Expr SEMI
   32          | LBRACE Statement1 RBRACE
   33          | IF LPAR Expr RPAR Statement ElseStatement

   34 ElseStatement: Empty
   35              | ELSE Statement

   36 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

   37 Expr0: Expr
   38      | Empty

   39 Statement: RETURN SEMI
   40          | RETURN Expr SEMI

   41 Expr: Expr ASSIGN_COMMA Expr
   42     | Expr AND_OR Expr
   43     | Expr COMP Expr
   44     | Expr OPS Expr
   45     | OTHER Expr
   46     | Expr LSQ Expr RSQ
   47     | ID LPAR Expr_COMMAExpr RPAR

   48 Expr_COMMAExpr: Empty
   49               | Expr COMMA_Expr

   50 COMMA_Expr: Empty
   51           | COMMA Expr COMMA_Expr

   52 Expr: ID_LITS LPAR Expr RPAR

   53 ASSIGN_COMMA: ASSIGN
   54             | COMMA

   55 AND_OR: AND
   56       | OR

   57 ID_LITS: ID
   58        | INTLIT
   59        | CHRLIT
   60        | STRLIT

   61 COMP: EQ
   62     | NE
   63     | LT
   64     | GT
   65     | LE
   66     | GE

   67 OPS: PLUS
   68    | MINUS
   69    | AST
   70    | DIV
   71    | MOD

   72 OTHER: AMP
   73      | AST
   74      | PLUS
   75      | MINUS
   76      | NOT

   77 Empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
AMP (258) 72
AND (259) 55
ASSIGN (260) 53
AST (261) 16 69 73
CHAR (262) 25
COMMA (263) 19 24 51 54
DIV (264) 70
ELSE (265) 35
EQ (266) 61
FOR (267) 36
GE (268) 66
GT (269) 64
IF (270) 33
INT (271) 26
LBRACE (272) 8 32
LE (273) 65
LPAR (274) 14 33 36 47 52
LSQ (275) 29 46
LT (276) 63
MINUS (277) 68 75
MOD (278) 71
NE (279) 62
NOT (280) 76
OR (281) 56
PLUS (282) 67 74
RBRACE (283) 8 32
RETURN (284) 39 40
RPAR (285) 14 33 36 47 52
RSQ (286) 29 46
SEMI (287) 13 22 30 31 36 39 40
VOID (288) 27
RESERVED (289)
ID (290) 14 21 28 29 47 57
INTLIT (291) 29 58
STRLIT (292) 60
CHRLIT (293) 59


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Start (40)
    on left: 1, on right: 0
FuncDefDecDec (41)
    on left: 2 3 4, on right: 1 6
FuncDefDecDec1 (42)
    on left: 5 6, on right: 1 6
FunctionDefinition (43)
    on left: 7, on right: 2
FunctionBody (44)
    on left: 8, on right: 7
Declaration1 (45)
    on left: 9 10, on right: 8 10
Statement1 (46)
    on left: 11 12, on right: 8 12 32
FunctionDeclaration (47)
    on left: 13, on right: 3
FunctionDeclarator (48)
    on left: 14, on right: 7 13
Asterisk (49)
    on left: 15 16, on right: 14 16 20 21 28 29
ParameterList (50)
    on left: 17, on right: 14
COMMA_ParameterDeclaration (51)
    on left: 18 19, on right: 17 19
ParameterDeclaration (52)
    on left: 20 21, on right: 17 19
Declaration (53)
    on left: 22, on right: 4 10
COMMA_Declarator (54)
    on left: 23 24, on right: 22 24
TypeSpec (55)
    on left: 25 26 27, on right: 7 13 20 21 22
Declarator (56)
    on left: 28 29, on right: 22 24
Statement (57)
    on left: 30 31 32 33 36 39 40, on right: 12 33 35 36
ElseStatement (58)
    on left: 34 35, on right: 33
Expr0 (59)
    on left: 37 38, on right: 36
Expr (60)
    on left: 41 42 43 44 45 46 47 52, on right: 31 33 37 40 41 42 43
    44 45 46 49 51 52
Expr_COMMAExpr (61)
    on left: 48 49, on right: 47
COMMA_Expr (62)
    on left: 50 51, on right: 49 51
ASSIGN_COMMA (63)
    on left: 53 54, on right: 41
AND_OR (64)
    on left: 55 56, on right: 42
ID_LITS (65)
    on left: 57 58 59 60, on right: 52
COMP (66)
    on left: 61 62 63 64 65 66, on right: 43
OPS (67)
    on left: 67 68 69 70 71, on right: 44
OTHER (68)
    on left: 72 73 74 75 76, on right: 45
Empty (69)
    on left: 77, on right: 5 9 11 15 18 23 34 38 48 50


State 0

    0 $accept: . Start $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    Start                go to state 4
    FuncDefDecDec        go to state 5
    FunctionDefinition   go to state 6
    FunctionDeclaration  go to state 7
    Declaration          go to state 8
    TypeSpec             go to state 9


State 1

   25 TypeSpec: CHAR .

    $default  reduce using rule 25 (TypeSpec)


State 2

   26 TypeSpec: INT .

    $default  reduce using rule 26 (TypeSpec)


State 3

   27 TypeSpec: VOID .

    $default  reduce using rule 27 (TypeSpec)


State 4

    0 $accept: Start . $end

    $end  shift, and go to state 10


State 5

    1 Start: FuncDefDecDec . FuncDefDecDec1

    $default  reduce using rule 77 (Empty)

    FuncDefDecDec1  go to state 11
    Empty           go to state 12


State 6

    2 FuncDefDecDec: FunctionDefinition .

    $default  reduce using rule 2 (FuncDefDecDec)


State 7

    3 FuncDefDecDec: FunctionDeclaration .

    $default  reduce using rule 3 (FuncDefDecDec)


State 8

    4 FuncDefDecDec: Declaration .

    $default  reduce using rule 4 (FuncDefDecDec)


State 9

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   13 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   22 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 77 (Empty)

    FunctionDeclarator  go to state 13
    Asterisk            go to state 14
    Declarator          go to state 15
    Empty               go to state 16


State 10

    0 $accept: Start $end .

    $default  accept


State 11

    1 Start: FuncDefDecDec FuncDefDecDec1 .
    6 FuncDefDecDec1: FuncDefDecDec1 . FuncDefDecDec

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 1 (Start)

    FuncDefDecDec        go to state 17
    FunctionDefinition   go to state 6
    FunctionDeclaration  go to state 7
    Declaration          go to state 8
    TypeSpec             go to state 9


State 12

    5 FuncDefDecDec1: Empty .

    $default  reduce using rule 5 (FuncDefDecDec1)


State 13

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   13 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 18
    SEMI    shift, and go to state 19

    FunctionBody  go to state 20


State 14

   14 FunctionDeclarator: Asterisk . ID LPAR ParameterList RPAR
   16 Asterisk: Asterisk . AST
   28 Declarator: Asterisk . ID
   29           | Asterisk . ID LSQ INTLIT RSQ

    AST  shift, and go to state 21
    ID   shift, and go to state 22


State 15

   22 Declaration: TypeSpec Declarator . COMMA_Declarator SEMI

    $default  reduce using rule 77 (Empty)

    COMMA_Declarator  go to state 23
    Empty             go to state 24


State 16

   15 Asterisk: Empty .

    $default  reduce using rule 15 (Asterisk)


State 17

    6 FuncDefDecDec1: FuncDefDecDec1 FuncDefDecDec .

    $default  reduce using rule 6 (FuncDefDecDec1)


State 18

    8 FunctionBody: LBRACE . Declaration1 Statement1 RBRACE

    $default  reduce using rule 77 (Empty)

    Declaration1  go to state 25
    Empty         go to state 26


State 19

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 13 (FunctionDeclaration)


State 20

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


State 21

   16 Asterisk: Asterisk AST .

    $default  reduce using rule 16 (Asterisk)


State 22

   14 FunctionDeclarator: Asterisk ID . LPAR ParameterList RPAR
   28 Declarator: Asterisk ID .
   29           | Asterisk ID . LSQ INTLIT RSQ

    LPAR  shift, and go to state 27
    LSQ   shift, and go to state 28

    $default  reduce using rule 28 (Declarator)


State 23

   22 Declaration: TypeSpec Declarator COMMA_Declarator . SEMI
   24 COMMA_Declarator: COMMA_Declarator . COMMA Declarator

    COMMA  shift, and go to state 29
    SEMI   shift, and go to state 30


State 24

   23 COMMA_Declarator: Empty .

    $default  reduce using rule 23 (COMMA_Declarator)


State 25

    8 FunctionBody: LBRACE Declaration1 . Statement1 RBRACE
   10 Declaration1: Declaration1 . Declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 77 (Empty)

    Statement1   go to state 31
    Declaration  go to state 32
    TypeSpec     go to state 33
    Empty        go to state 34


State 26

    9 Declaration1: Empty .

    $default  reduce using rule 9 (Declaration1)


State 27

   14 FunctionDeclarator: Asterisk ID LPAR . ParameterList RPAR

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    ParameterList         go to state 35
    ParameterDeclaration  go to state 36
    TypeSpec              go to state 37


State 28

   29 Declarator: Asterisk ID LSQ . INTLIT RSQ

    INTLIT  shift, and go to state 38


State 29

   24 COMMA_Declarator: COMMA_Declarator COMMA . Declarator

    $default  reduce using rule 77 (Empty)

    Asterisk    go to state 39
    Declarator  go to state 40
    Empty       go to state 16


State 30

   22 Declaration: TypeSpec Declarator COMMA_Declarator SEMI .

    $default  reduce using rule 22 (Declaration)


State 31

    8 FunctionBody: LBRACE Declaration1 Statement1 . RBRACE
   12 Statement1: Statement1 . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    RBRACE  shift, and go to state 49
    RETURN  shift, and go to state 50
    SEMI    shift, and go to state 51
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Statement  go to state 56
    Expr       go to state 57
    ID_LITS    go to state 58
    OTHER      go to state 59


State 32

   10 Declaration1: Declaration1 Declaration .

    $default  reduce using rule 10 (Declaration1)


State 33

   22 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 77 (Empty)

    Asterisk    go to state 39
    Declarator  go to state 15
    Empty       go to state 16


State 34

   11 Statement1: Empty .

    $default  reduce using rule 11 (Statement1)


State 35

   14 FunctionDeclarator: Asterisk ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 60


State 36

   17 ParameterList: ParameterDeclaration . COMMA_ParameterDeclaration

    $default  reduce using rule 77 (Empty)

    COMMA_ParameterDeclaration  go to state 61
    Empty                       go to state 62


State 37

   20 ParameterDeclaration: TypeSpec . Asterisk
   21                     | TypeSpec . Asterisk ID

    $default  reduce using rule 77 (Empty)

    Asterisk  go to state 63
    Empty     go to state 16


State 38

   29 Declarator: Asterisk ID LSQ INTLIT . RSQ

    RSQ  shift, and go to state 64


State 39

   16 Asterisk: Asterisk . AST
   28 Declarator: Asterisk . ID
   29           | Asterisk . ID LSQ INTLIT RSQ

    AST  shift, and go to state 21
    ID   shift, and go to state 65


State 40

   24 COMMA_Declarator: COMMA_Declarator COMMA Declarator .

    $default  reduce using rule 24 (COMMA_Declarator)


State 41

   72 OTHER: AMP .

    $default  reduce using rule 72 (OTHER)


State 42

   73 OTHER: AST .

    $default  reduce using rule 73 (OTHER)


State 43

   36 Statement: FOR . LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    LPAR  shift, and go to state 66


State 44

   33 Statement: IF . LPAR Expr RPAR Statement ElseStatement

    LPAR  shift, and go to state 67


State 45

   32 Statement: LBRACE . Statement1 RBRACE

    $default  reduce using rule 77 (Empty)

    Statement1  go to state 68
    Empty       go to state 34


State 46

   75 OTHER: MINUS .

    $default  reduce using rule 75 (OTHER)


State 47

   76 OTHER: NOT .

    $default  reduce using rule 76 (OTHER)


State 48

   74 OTHER: PLUS .

    $default  reduce using rule 74 (OTHER)


State 49

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 50

   39 Statement: RETURN . SEMI
   40          | RETURN . Expr SEMI

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    SEMI    shift, and go to state 69
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 70
    ID_LITS  go to state 58
    OTHER    go to state 59


State 51

   30 Statement: SEMI .

    $default  reduce using rule 30 (Statement)


State 52

   47 Expr: ID . LPAR Expr_COMMAExpr RPAR
   57 ID_LITS: ID .

    LPAR  shift, and go to state 71

    LPAR  [reduce using rule 57 (ID_LITS)]


State 53

   58 ID_LITS: INTLIT .

    $default  reduce using rule 58 (ID_LITS)


State 54

   60 ID_LITS: STRLIT .

    $default  reduce using rule 60 (ID_LITS)


State 55

   59 ID_LITS: CHRLIT .

    $default  reduce using rule 59 (ID_LITS)


State 56

   12 Statement1: Statement1 Statement .

    $default  reduce using rule 12 (Statement1)


State 57

   31 Statement: Expr . SEMI
   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87
    SEMI    shift, and go to state 88

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 58

   52 Expr: ID_LITS . LPAR Expr RPAR

    LPAR  shift, and go to state 93


State 59

   45 Expr: OTHER . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 94
    ID_LITS  go to state 58
    OTHER    go to state 59


State 60

   14 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR .

    $default  reduce using rule 14 (FunctionDeclarator)


State 61

   17 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration .
   19 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration . COMMA ParameterDeclaration

    COMMA  shift, and go to state 95

    $default  reduce using rule 17 (ParameterList)


State 62

   18 COMMA_ParameterDeclaration: Empty .

    $default  reduce using rule 18 (COMMA_ParameterDeclaration)


State 63

   16 Asterisk: Asterisk . AST
   20 ParameterDeclaration: TypeSpec Asterisk .
   21                     | TypeSpec Asterisk . ID

    AST  shift, and go to state 21
    ID   shift, and go to state 96

    $default  reduce using rule 20 (ParameterDeclaration)


State 64

   29 Declarator: Asterisk ID LSQ INTLIT RSQ .

    $default  reduce using rule 29 (Declarator)


State 65

   28 Declarator: Asterisk ID .
   29           | Asterisk ID . LSQ INTLIT RSQ

    LSQ  shift, and go to state 28

    $default  reduce using rule 28 (Declarator)


State 66

   36 Statement: FOR LPAR . Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    $default  reduce using rule 77 (Empty)

    Expr0    go to state 97
    Expr     go to state 98
    ID_LITS  go to state 58
    OTHER    go to state 59
    Empty    go to state 99


State 67

   33 Statement: IF LPAR . Expr RPAR Statement ElseStatement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 100
    ID_LITS  go to state 58
    OTHER    go to state 59


State 68

   12 Statement1: Statement1 . Statement
   32 Statement: LBRACE Statement1 . RBRACE

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    RBRACE  shift, and go to state 101
    RETURN  shift, and go to state 50
    SEMI    shift, and go to state 51
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Statement  go to state 56
    Expr       go to state 57
    ID_LITS    go to state 58
    OTHER      go to state 59


State 69

   39 Statement: RETURN SEMI .

    $default  reduce using rule 39 (Statement)


State 70

   40 Statement: RETURN Expr . SEMI
   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87
    SEMI    shift, and go to state 102

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 71

   47 Expr: ID LPAR . Expr_COMMAExpr RPAR

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    $default  reduce using rule 77 (Empty)

    Expr            go to state 103
    Expr_COMMAExpr  go to state 104
    ID_LITS         go to state 58
    OTHER           go to state 59
    Empty           go to state 105


State 72

   55 AND_OR: AND .

    $default  reduce using rule 55 (AND_OR)


State 73

   53 ASSIGN_COMMA: ASSIGN .

    $default  reduce using rule 53 (ASSIGN_COMMA)


State 74

   69 OPS: AST .

    $default  reduce using rule 69 (OPS)


State 75

   54 ASSIGN_COMMA: COMMA .

    $default  reduce using rule 54 (ASSIGN_COMMA)


State 76

   70 OPS: DIV .

    $default  reduce using rule 70 (OPS)


State 77

   61 COMP: EQ .

    $default  reduce using rule 61 (COMP)


State 78

   66 COMP: GE .

    $default  reduce using rule 66 (COMP)


State 79

   64 COMP: GT .

    $default  reduce using rule 64 (COMP)


State 80

   65 COMP: LE .

    $default  reduce using rule 65 (COMP)


State 81

   46 Expr: Expr LSQ . Expr RSQ

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 106
    ID_LITS  go to state 58
    OTHER    go to state 59


State 82

   63 COMP: LT .

    $default  reduce using rule 63 (COMP)


State 83

   68 OPS: MINUS .

    $default  reduce using rule 68 (OPS)


State 84

   71 OPS: MOD .

    $default  reduce using rule 71 (OPS)


State 85

   62 COMP: NE .

    $default  reduce using rule 62 (COMP)


State 86

   56 AND_OR: OR .

    $default  reduce using rule 56 (AND_OR)


State 87

   67 OPS: PLUS .

    $default  reduce using rule 67 (OPS)


State 88

   31 Statement: Expr SEMI .

    $default  reduce using rule 31 (Statement)


State 89

   41 Expr: Expr ASSIGN_COMMA . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 107
    ID_LITS  go to state 58
    OTHER    go to state 59


State 90

   42 Expr: Expr AND_OR . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 108
    ID_LITS  go to state 58
    OTHER    go to state 59


State 91

   43 Expr: Expr COMP . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 109
    ID_LITS  go to state 58
    OTHER    go to state 59


State 92

   44 Expr: Expr OPS . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 110
    ID_LITS  go to state 58
    OTHER    go to state 59


State 93

   52 Expr: ID_LITS LPAR . Expr RPAR

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Expr     go to state 111
    ID_LITS  go to state 58
    OTHER    go to state 59


State 94

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   45     | OTHER Expr .
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    AND       [reduce using rule 45 (Expr)]
    ASSIGN    [reduce using rule 45 (Expr)]
    AST       [reduce using rule 45 (Expr)]
    COMMA     [reduce using rule 45 (Expr)]
    DIV       [reduce using rule 45 (Expr)]
    EQ        [reduce using rule 45 (Expr)]
    GE        [reduce using rule 45 (Expr)]
    GT        [reduce using rule 45 (Expr)]
    LE        [reduce using rule 45 (Expr)]
    LSQ       [reduce using rule 45 (Expr)]
    LT        [reduce using rule 45 (Expr)]
    MINUS     [reduce using rule 45 (Expr)]
    MOD       [reduce using rule 45 (Expr)]
    NE        [reduce using rule 45 (Expr)]
    OR        [reduce using rule 45 (Expr)]
    PLUS      [reduce using rule 45 (Expr)]
    $default  reduce using rule 45 (Expr)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 95

   19 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA . ParameterDeclaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    ParameterDeclaration  go to state 112
    TypeSpec              go to state 37


State 96

   21 ParameterDeclaration: TypeSpec Asterisk ID .

    $default  reduce using rule 21 (ParameterDeclaration)


State 97

   36 Statement: FOR LPAR Expr0 . SEMI Expr0 SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 113


State 98

   37 Expr0: Expr .
   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    $default  reduce using rule 37 (Expr0)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 99

   38 Expr0: Empty .

    $default  reduce using rule 38 (Expr0)


State 100

   33 Statement: IF LPAR Expr . RPAR Statement ElseStatement
   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87
    RPAR    shift, and go to state 114

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 101

   32 Statement: LBRACE Statement1 RBRACE .

    $default  reduce using rule 32 (Statement)


State 102

   40 Statement: RETURN Expr SEMI .

    $default  reduce using rule 40 (Statement)


State 103

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ
   49 Expr_COMMAExpr: Expr . COMMA_Expr

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 115
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    $default  reduce using rule 77 (Empty)

    COMMA_Expr    go to state 116
    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92
    Empty         go to state 117


State 104

   47 Expr: ID LPAR Expr_COMMAExpr . RPAR

    RPAR  shift, and go to state 118


State 105

   48 Expr_COMMAExpr: Empty .

    $default  reduce using rule 48 (Expr_COMMAExpr)


State 106

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ
   46     | Expr LSQ Expr . RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87
    RSQ     shift, and go to state 119

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 107

   41 Expr: Expr . ASSIGN_COMMA Expr
   41     | Expr ASSIGN_COMMA Expr .
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    AND       [reduce using rule 41 (Expr)]
    ASSIGN    [reduce using rule 41 (Expr)]
    AST       [reduce using rule 41 (Expr)]
    COMMA     [reduce using rule 41 (Expr)]
    DIV       [reduce using rule 41 (Expr)]
    EQ        [reduce using rule 41 (Expr)]
    GE        [reduce using rule 41 (Expr)]
    GT        [reduce using rule 41 (Expr)]
    LE        [reduce using rule 41 (Expr)]
    LSQ       [reduce using rule 41 (Expr)]
    LT        [reduce using rule 41 (Expr)]
    MINUS     [reduce using rule 41 (Expr)]
    MOD       [reduce using rule 41 (Expr)]
    NE        [reduce using rule 41 (Expr)]
    OR        [reduce using rule 41 (Expr)]
    PLUS      [reduce using rule 41 (Expr)]
    $default  reduce using rule 41 (Expr)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 108

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   42     | Expr AND_OR Expr .
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    AND       [reduce using rule 42 (Expr)]
    ASSIGN    [reduce using rule 42 (Expr)]
    AST       [reduce using rule 42 (Expr)]
    COMMA     [reduce using rule 42 (Expr)]
    DIV       [reduce using rule 42 (Expr)]
    EQ        [reduce using rule 42 (Expr)]
    GE        [reduce using rule 42 (Expr)]
    GT        [reduce using rule 42 (Expr)]
    LE        [reduce using rule 42 (Expr)]
    LSQ       [reduce using rule 42 (Expr)]
    LT        [reduce using rule 42 (Expr)]
    MINUS     [reduce using rule 42 (Expr)]
    MOD       [reduce using rule 42 (Expr)]
    NE        [reduce using rule 42 (Expr)]
    OR        [reduce using rule 42 (Expr)]
    PLUS      [reduce using rule 42 (Expr)]
    $default  reduce using rule 42 (Expr)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 109

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   43     | Expr COMP Expr .
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    AND       [reduce using rule 43 (Expr)]
    ASSIGN    [reduce using rule 43 (Expr)]
    AST       [reduce using rule 43 (Expr)]
    COMMA     [reduce using rule 43 (Expr)]
    DIV       [reduce using rule 43 (Expr)]
    EQ        [reduce using rule 43 (Expr)]
    GE        [reduce using rule 43 (Expr)]
    GT        [reduce using rule 43 (Expr)]
    LE        [reduce using rule 43 (Expr)]
    LSQ       [reduce using rule 43 (Expr)]
    LT        [reduce using rule 43 (Expr)]
    MINUS     [reduce using rule 43 (Expr)]
    MOD       [reduce using rule 43 (Expr)]
    NE        [reduce using rule 43 (Expr)]
    OR        [reduce using rule 43 (Expr)]
    PLUS      [reduce using rule 43 (Expr)]
    $default  reduce using rule 43 (Expr)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 110

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   44     | Expr OPS Expr .
   46     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    AND       [reduce using rule 44 (Expr)]
    ASSIGN    [reduce using rule 44 (Expr)]
    AST       [reduce using rule 44 (Expr)]
    COMMA     [reduce using rule 44 (Expr)]
    DIV       [reduce using rule 44 (Expr)]
    EQ        [reduce using rule 44 (Expr)]
    GE        [reduce using rule 44 (Expr)]
    GT        [reduce using rule 44 (Expr)]
    LE        [reduce using rule 44 (Expr)]
    LSQ       [reduce using rule 44 (Expr)]
    LT        [reduce using rule 44 (Expr)]
    MINUS     [reduce using rule 44 (Expr)]
    MOD       [reduce using rule 44 (Expr)]
    NE        [reduce using rule 44 (Expr)]
    OR        [reduce using rule 44 (Expr)]
    PLUS      [reduce using rule 44 (Expr)]
    $default  reduce using rule 44 (Expr)

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 111

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ
   52     | ID_LITS LPAR Expr . RPAR

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 75
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87
    RPAR    shift, and go to state 120

    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92


State 112

   19 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA ParameterDeclaration .

    $default  reduce using rule 19 (COMMA_ParameterDeclaration)


State 113

   36 Statement: FOR LPAR Expr0 SEMI . Expr0 SEMI Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    $default  reduce using rule 77 (Empty)

    Expr0    go to state 121
    Expr     go to state 98
    ID_LITS  go to state 58
    OTHER    go to state 59
    Empty    go to state 99


State 114

   33 Statement: IF LPAR Expr RPAR . Statement ElseStatement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    RETURN  shift, and go to state 50
    SEMI    shift, and go to state 51
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Statement  go to state 122
    Expr       go to state 57
    ID_LITS    go to state 58
    OTHER      go to state 59


State 115

   51 COMMA_Expr: COMMA . Expr COMMA_Expr
   54 ASSIGN_COMMA: COMMA .

    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    ID        [reduce using rule 54 (ASSIGN_COMMA)]
    INTLIT    [reduce using rule 54 (ASSIGN_COMMA)]
    STRLIT    [reduce using rule 54 (ASSIGN_COMMA)]
    CHRLIT    [reduce using rule 54 (ASSIGN_COMMA)]
    $default  reduce using rule 54 (ASSIGN_COMMA)

    Expr     go to state 123
    ID_LITS  go to state 58
    OTHER    go to state 59


State 116

   49 Expr_COMMAExpr: Expr COMMA_Expr .

    $default  reduce using rule 49 (Expr_COMMAExpr)


State 117

   50 COMMA_Expr: Empty .

    $default  reduce using rule 50 (COMMA_Expr)


State 118

   47 Expr: ID LPAR Expr_COMMAExpr RPAR .

    $default  reduce using rule 47 (Expr)


State 119

   46 Expr: Expr LSQ Expr RSQ .

    $default  reduce using rule 46 (Expr)


State 120

   52 Expr: ID_LITS LPAR Expr RPAR .

    $default  reduce using rule 52 (Expr)


State 121

   36 Statement: FOR LPAR Expr0 SEMI Expr0 . SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 124


State 122

   33 Statement: IF LPAR Expr RPAR Statement . ElseStatement

    ELSE  shift, and go to state 125

    ELSE      [reduce using rule 77 (Empty)]
    $default  reduce using rule 77 (Empty)

    ElseStatement  go to state 126
    Empty          go to state 127


State 123

   41 Expr: Expr . ASSIGN_COMMA Expr
   42     | Expr . AND_OR Expr
   43     | Expr . COMP Expr
   44     | Expr . OPS Expr
   46     | Expr . LSQ Expr RSQ
   51 COMMA_Expr: COMMA Expr . COMMA_Expr

    AND     shift, and go to state 72
    ASSIGN  shift, and go to state 73
    AST     shift, and go to state 74
    COMMA   shift, and go to state 115
    DIV     shift, and go to state 76
    EQ      shift, and go to state 77
    GE      shift, and go to state 78
    GT      shift, and go to state 79
    LE      shift, and go to state 80
    LSQ     shift, and go to state 81
    LT      shift, and go to state 82
    MINUS   shift, and go to state 83
    MOD     shift, and go to state 84
    NE      shift, and go to state 85
    OR      shift, and go to state 86
    PLUS    shift, and go to state 87

    $default  reduce using rule 77 (Empty)

    COMMA_Expr    go to state 128
    ASSIGN_COMMA  go to state 89
    AND_OR        go to state 90
    COMP          go to state 91
    OPS           go to state 92
    Empty         go to state 117


State 124

   36 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI . Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    $default  reduce using rule 77 (Empty)

    Expr0    go to state 129
    Expr     go to state 98
    ID_LITS  go to state 58
    OTHER    go to state 59
    Empty    go to state 99


State 125

   35 ElseStatement: ELSE . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    RETURN  shift, and go to state 50
    SEMI    shift, and go to state 51
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Statement  go to state 130
    Expr       go to state 57
    ID_LITS    go to state 58
    OTHER      go to state 59


State 126

   33 Statement: IF LPAR Expr RPAR Statement ElseStatement .

    $default  reduce using rule 33 (Statement)


State 127

   34 ElseStatement: Empty .

    $default  reduce using rule 34 (ElseStatement)


State 128

   51 COMMA_Expr: COMMA Expr COMMA_Expr .

    $default  reduce using rule 51 (COMMA_Expr)


State 129

   36 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 . RPAR Statement

    RPAR  shift, and go to state 131


State 130

   35 ElseStatement: ELSE Statement .

    $default  reduce using rule 35 (ElseStatement)


State 131

   36 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    MINUS   shift, and go to state 46
    NOT     shift, and go to state 47
    PLUS    shift, and go to state 48
    RETURN  shift, and go to state 50
    SEMI    shift, and go to state 51
    ID      shift, and go to state 52
    INTLIT  shift, and go to state 53
    STRLIT  shift, and go to state 54
    CHRLIT  shift, and go to state 55

    Statement  go to state 132
    Expr       go to state 57
    ID_LITS    go to state 58
    OTHER      go to state 59


State 132

   36 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement .

    $default  reduce using rule 36 (Statement)

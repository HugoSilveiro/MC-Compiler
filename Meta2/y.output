Terminals unused in grammar

   AMP
   AND
   ASSIGN
   DIV
   EQ
   GE
   GT
   LE
   LT
   MINUS
   MOD
   NE
   NOT
   OR
   PLUS
   RESERVED


State 20 conflicts: 1 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: FuncDefDecDec FuncDefDecDec1

    2 FuncDefDecDec: FunctionDefinition
    3              | FunctionDeclaration
    4              | Declaration

    5 FuncDefDecDec1: Empty
    6               | FuncDefDecDec1 FuncDefDecDec

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE
    9             | LBRACE error RBRACE

   10 Declaration1: Empty
   11             | Declaration1 Declaration

   12 Statement1: Empty
   13           | Statement1 Statement

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   15 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR

   16 Asterisk: Empty
   17         | Asterisk AST

   18 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration

   19 COMMA_ParameterDeclaration: Empty
   20                           | COMMA_ParameterDeclaration COMMA ParameterDeclaration

   21 ParameterDeclaration: TypeSpec Asterisk
   22                     | TypeSpec Asterisk ID

   23 Declaration: TypeSpec Declarator COMMA_Declarator SEMI
   24            | error SEMI

   25 COMMA_Declarator: Empty
   26                 | COMMA_Declarator COMMA Declarator

   27 TypeSpec: CHAR
   28         | INT
   29         | VOID

   30 Declarator: Asterisk ID
   31           | Asterisk ID LSQSTATE INTLITSTATE RSQSTATE

   32 LSQSTATE: LSQ

   33 RSQSTATE: RSQ

   34 INTLITSTATE: INTLIT

   35 Statement: SEMI
   36          | Expr SEMI
   37          | LBRACE Statement1 RBRACE
   38          | StateIF
   39          | FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

   40 StateIF: IF LPAR Expr RPAR Statement
   41        | IF LPAR Expr RPAR Statement ELSE Statement

   42 Statement: RETURN SEMI
   43          | RETURN Expr SEMI

   44 Expr0: Empty
   45      | Expr

   46 Expr: LPAR Expr RPAR
   47     | ID
   48     | INTLIT
   49     | CHRLIT
   50     | STRLIT

   51 Empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 9 24
AMP (258)
AND (259)
ASSIGN (260)
AST (261) 17
CHAR (262) 27
COMMA (263) 20 26
DIV (264)
ELSE (265) 41
EQ (266)
FOR (267) 39
GE (268)
GT (269)
IF (270) 40 41
INT (271) 28
LBRACE (272) 8 9 37
LE (273)
LPAR (274) 15 39 40 41 46
LSQ (275) 32
LT (276)
MINUS (277)
MOD (278)
NE (279)
NOT (280)
OR (281)
PLUS (282)
RBRACE (283) 8 9 37
RETURN (284) 42 43
RPAR (285) 15 39 40 41 46
RSQ (286) 33
SEMI (287) 14 23 24 35 36 39 42 43
VOID (288) 29
RESERVED (289)
ID (290) 15 22 30 31 47
INTLIT (291) 34 48
STRLIT (292) 50
CHRLIT (293) 49
"then" (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Start (41)
    on left: 1, on right: 0
FuncDefDecDec (42)
    on left: 2 3 4, on right: 1 6
FuncDefDecDec1 (43)
    on left: 5 6, on right: 1 6
FunctionDefinition (44)
    on left: 7, on right: 2
FunctionBody (45)
    on left: 8 9, on right: 7
Declaration1 (46)
    on left: 10 11, on right: 8 11
Statement1 (47)
    on left: 12 13, on right: 8 13 37
FunctionDeclaration (48)
    on left: 14, on right: 3
FunctionDeclarator (49)
    on left: 15, on right: 7 14
Asterisk (50)
    on left: 16 17, on right: 15 17 21 22 30 31
ParameterList (51)
    on left: 18, on right: 15
COMMA_ParameterDeclaration (52)
    on left: 19 20, on right: 18 20
ParameterDeclaration (53)
    on left: 21 22, on right: 18 20
Declaration (54)
    on left: 23 24, on right: 4 11
COMMA_Declarator (55)
    on left: 25 26, on right: 23 26
TypeSpec (56)
    on left: 27 28 29, on right: 7 14 21 22 23
Declarator (57)
    on left: 30 31, on right: 23 26
LSQSTATE (58)
    on left: 32, on right: 31
RSQSTATE (59)
    on left: 33, on right: 31
INTLITSTATE (60)
    on left: 34, on right: 31
Statement (61)
    on left: 35 36 37 38 39 42 43, on right: 13 39 40 41
StateIF (62)
    on left: 40 41, on right: 38
Expr0 (63)
    on left: 44 45, on right: 39
Expr (64)
    on left: 46 47 48 49 50, on right: 36 40 41 43 45 46
Empty (65)
    on left: 51, on right: 5 10 12 16 19 25 44


State 0

    0 $accept: . Start $end

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    Start                go to state 5
    FuncDefDecDec        go to state 6
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 1

   24 Declaration: error . SEMI

    SEMI  shift, and go to state 11


State 2

   27 TypeSpec: CHAR .

    $default  reduce using rule 27 (TypeSpec)


State 3

   28 TypeSpec: INT .

    $default  reduce using rule 28 (TypeSpec)


State 4

   29 TypeSpec: VOID .

    $default  reduce using rule 29 (TypeSpec)


State 5

    0 $accept: Start . $end

    $end  shift, and go to state 12


State 6

    1 Start: FuncDefDecDec . FuncDefDecDec1

    $default  reduce using rule 51 (Empty)

    FuncDefDecDec1  go to state 13
    Empty           go to state 14


State 7

    2 FuncDefDecDec: FunctionDefinition .

    $default  reduce using rule 2 (FuncDefDecDec)


State 8

    3 FuncDefDecDec: FunctionDeclaration .

    $default  reduce using rule 3 (FuncDefDecDec)


State 9

    4 FuncDefDecDec: Declaration .

    $default  reduce using rule 4 (FuncDefDecDec)


State 10

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   23 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 51 (Empty)

    FunctionDeclarator  go to state 15
    Asterisk            go to state 16
    Declarator          go to state 17
    Empty               go to state 18


State 11

   24 Declaration: error SEMI .

    $default  reduce using rule 24 (Declaration)


State 12

    0 $accept: Start $end .

    $default  accept


State 13

    1 Start: FuncDefDecDec FuncDefDecDec1 .
    6 FuncDefDecDec1: FuncDefDecDec1 . FuncDefDecDec

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 1 (Start)

    FuncDefDecDec        go to state 19
    FunctionDefinition   go to state 7
    FunctionDeclaration  go to state 8
    Declaration          go to state 9
    TypeSpec             go to state 10


State 14

    5 FuncDefDecDec1: Empty .

    $default  reduce using rule 5 (FuncDefDecDec1)


State 15

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 20
    SEMI    shift, and go to state 21

    FunctionBody  go to state 22


State 16

   15 FunctionDeclarator: Asterisk . ID LPAR ParameterList RPAR
   17 Asterisk: Asterisk . AST
   30 Declarator: Asterisk . ID
   31           | Asterisk . ID LSQSTATE INTLITSTATE RSQSTATE

    AST  shift, and go to state 23
    ID   shift, and go to state 24


State 17

   23 Declaration: TypeSpec Declarator . COMMA_Declarator SEMI

    $default  reduce using rule 51 (Empty)

    COMMA_Declarator  go to state 25
    Empty             go to state 26


State 18

   16 Asterisk: Empty .

    $default  reduce using rule 16 (Asterisk)


State 19

    6 FuncDefDecDec1: FuncDefDecDec1 FuncDefDecDec .

    $default  reduce using rule 6 (FuncDefDecDec1)


State 20

    8 FunctionBody: LBRACE . Declaration1 Statement1 RBRACE
    9             | LBRACE . error RBRACE

    error  shift, and go to state 27

    error   [reduce using rule 51 (Empty)]
    CHAR    reduce using rule 51 (Empty)
    FOR     reduce using rule 51 (Empty)
    IF      reduce using rule 51 (Empty)
    INT     reduce using rule 51 (Empty)
    LBRACE  reduce using rule 51 (Empty)
    LPAR    reduce using rule 51 (Empty)
    RBRACE  reduce using rule 51 (Empty)
    RETURN  reduce using rule 51 (Empty)
    SEMI    reduce using rule 51 (Empty)
    VOID    reduce using rule 51 (Empty)
    ID      reduce using rule 51 (Empty)
    INTLIT  reduce using rule 51 (Empty)
    STRLIT  reduce using rule 51 (Empty)
    CHRLIT  reduce using rule 51 (Empty)

    Declaration1  go to state 28
    Empty         go to state 29


State 21

   14 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 14 (FunctionDeclaration)


State 22

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


State 23

   17 Asterisk: Asterisk AST .

    $default  reduce using rule 17 (Asterisk)


State 24

   15 FunctionDeclarator: Asterisk ID . LPAR ParameterList RPAR
   30 Declarator: Asterisk ID .
   31           | Asterisk ID . LSQSTATE INTLITSTATE RSQSTATE

    LPAR  shift, and go to state 30
    LSQ   shift, and go to state 31

    $default  reduce using rule 30 (Declarator)

    LSQSTATE  go to state 32


State 25

   23 Declaration: TypeSpec Declarator COMMA_Declarator . SEMI
   26 COMMA_Declarator: COMMA_Declarator . COMMA Declarator

    COMMA  shift, and go to state 33
    SEMI   shift, and go to state 34


State 26

   25 COMMA_Declarator: Empty .

    $default  reduce using rule 25 (COMMA_Declarator)


State 27

    9 FunctionBody: LBRACE error . RBRACE

    RBRACE  shift, and go to state 35


State 28

    8 FunctionBody: LBRACE Declaration1 . Statement1 RBRACE
   11 Declaration1: Declaration1 . Declaration

    error  shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4

    FOR     reduce using rule 51 (Empty)
    IF      reduce using rule 51 (Empty)
    LBRACE  reduce using rule 51 (Empty)
    LPAR    reduce using rule 51 (Empty)
    RBRACE  reduce using rule 51 (Empty)
    RETURN  reduce using rule 51 (Empty)
    SEMI    reduce using rule 51 (Empty)
    ID      reduce using rule 51 (Empty)
    INTLIT  reduce using rule 51 (Empty)
    STRLIT  reduce using rule 51 (Empty)
    CHRLIT  reduce using rule 51 (Empty)

    Statement1   go to state 36
    Declaration  go to state 37
    TypeSpec     go to state 38
    Empty        go to state 39


State 29

   10 Declaration1: Empty .

    $default  reduce using rule 10 (Declaration1)


State 30

   15 FunctionDeclarator: Asterisk ID LPAR . ParameterList RPAR

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterList         go to state 40
    ParameterDeclaration  go to state 41
    TypeSpec              go to state 42


State 31

   32 LSQSTATE: LSQ .

    $default  reduce using rule 32 (LSQSTATE)


State 32

   31 Declarator: Asterisk ID LSQSTATE . INTLITSTATE RSQSTATE

    INTLIT  shift, and go to state 43

    INTLITSTATE  go to state 44


State 33

   26 COMMA_Declarator: COMMA_Declarator COMMA . Declarator

    $default  reduce using rule 51 (Empty)

    Asterisk    go to state 45
    Declarator  go to state 46
    Empty       go to state 18


State 34

   23 Declaration: TypeSpec Declarator COMMA_Declarator SEMI .

    $default  reduce using rule 23 (Declaration)


State 35

    9 FunctionBody: LBRACE error RBRACE .

    $default  reduce using rule 9 (FunctionBody)


State 36

    8 FunctionBody: LBRACE Declaration1 Statement1 . RBRACE
   13 Statement1: Statement1 . Statement

    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    LBRACE  shift, and go to state 49
    LPAR    shift, and go to state 50
    RBRACE  shift, and go to state 51
    RETURN  shift, and go to state 52
    SEMI    shift, and go to state 53
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Statement  go to state 58
    StateIF    go to state 59
    Expr       go to state 60


State 37

   11 Declaration1: Declaration1 Declaration .

    $default  reduce using rule 11 (Declaration1)


State 38

   23 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 51 (Empty)

    Asterisk    go to state 45
    Declarator  go to state 17
    Empty       go to state 18


State 39

   12 Statement1: Empty .

    $default  reduce using rule 12 (Statement1)


State 40

   15 FunctionDeclarator: Asterisk ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 61


State 41

   18 ParameterList: ParameterDeclaration . COMMA_ParameterDeclaration

    $default  reduce using rule 51 (Empty)

    COMMA_ParameterDeclaration  go to state 62
    Empty                       go to state 63


State 42

   21 ParameterDeclaration: TypeSpec . Asterisk
   22                     | TypeSpec . Asterisk ID

    $default  reduce using rule 51 (Empty)

    Asterisk  go to state 64
    Empty     go to state 18


State 43

   34 INTLITSTATE: INTLIT .

    $default  reduce using rule 34 (INTLITSTATE)


State 44

   31 Declarator: Asterisk ID LSQSTATE INTLITSTATE . RSQSTATE

    RSQ  shift, and go to state 65

    RSQSTATE  go to state 66


State 45

   17 Asterisk: Asterisk . AST
   30 Declarator: Asterisk . ID
   31           | Asterisk . ID LSQSTATE INTLITSTATE RSQSTATE

    AST  shift, and go to state 23
    ID   shift, and go to state 67


State 46

   26 COMMA_Declarator: COMMA_Declarator COMMA Declarator .

    $default  reduce using rule 26 (COMMA_Declarator)


State 47

   39 Statement: FOR . LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    LPAR  shift, and go to state 68


State 48

   40 StateIF: IF . LPAR Expr RPAR Statement
   41        | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 69


State 49

   37 Statement: LBRACE . Statement1 RBRACE

    $default  reduce using rule 51 (Empty)

    Statement1  go to state 70
    Empty       go to state 39


State 50

   46 Expr: LPAR . Expr RPAR

    LPAR    shift, and go to state 50
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Expr  go to state 71


State 51

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 52

   42 Statement: RETURN . SEMI
   43          | RETURN . Expr SEMI

    LPAR    shift, and go to state 50
    SEMI    shift, and go to state 72
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Expr  go to state 73


State 53

   35 Statement: SEMI .

    $default  reduce using rule 35 (Statement)


State 54

   47 Expr: ID .

    $default  reduce using rule 47 (Expr)


State 55

   48 Expr: INTLIT .

    $default  reduce using rule 48 (Expr)


State 56

   50 Expr: STRLIT .

    $default  reduce using rule 50 (Expr)


State 57

   49 Expr: CHRLIT .

    $default  reduce using rule 49 (Expr)


State 58

   13 Statement1: Statement1 Statement .

    $default  reduce using rule 13 (Statement1)


State 59

   38 Statement: StateIF .

    $default  reduce using rule 38 (Statement)


State 60

   36 Statement: Expr . SEMI

    SEMI  shift, and go to state 74


State 61

   15 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR .

    $default  reduce using rule 15 (FunctionDeclarator)


State 62

   18 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration .
   20 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration . COMMA ParameterDeclaration

    COMMA  shift, and go to state 75

    $default  reduce using rule 18 (ParameterList)


State 63

   19 COMMA_ParameterDeclaration: Empty .

    $default  reduce using rule 19 (COMMA_ParameterDeclaration)


State 64

   17 Asterisk: Asterisk . AST
   21 ParameterDeclaration: TypeSpec Asterisk .
   22                     | TypeSpec Asterisk . ID

    AST  shift, and go to state 23
    ID   shift, and go to state 76

    $default  reduce using rule 21 (ParameterDeclaration)


State 65

   33 RSQSTATE: RSQ .

    $default  reduce using rule 33 (RSQSTATE)


State 66

   31 Declarator: Asterisk ID LSQSTATE INTLITSTATE RSQSTATE .

    $default  reduce using rule 31 (Declarator)


State 67

   30 Declarator: Asterisk ID .
   31           | Asterisk ID . LSQSTATE INTLITSTATE RSQSTATE

    LSQ  shift, and go to state 31

    $default  reduce using rule 30 (Declarator)

    LSQSTATE  go to state 32


State 68

   39 Statement: FOR LPAR . Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    LPAR    shift, and go to state 50
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    $default  reduce using rule 51 (Empty)

    Expr0  go to state 77
    Expr   go to state 78
    Empty  go to state 79


State 69

   40 StateIF: IF LPAR . Expr RPAR Statement
   41        | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR    shift, and go to state 50
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Expr  go to state 80


State 70

   13 Statement1: Statement1 . Statement
   37 Statement: LBRACE Statement1 . RBRACE

    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    LBRACE  shift, and go to state 49
    LPAR    shift, and go to state 50
    RBRACE  shift, and go to state 81
    RETURN  shift, and go to state 52
    SEMI    shift, and go to state 53
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Statement  go to state 58
    StateIF    go to state 59
    Expr       go to state 60


State 71

   46 Expr: LPAR Expr . RPAR

    RPAR  shift, and go to state 82


State 72

   42 Statement: RETURN SEMI .

    $default  reduce using rule 42 (Statement)


State 73

   43 Statement: RETURN Expr . SEMI

    SEMI  shift, and go to state 83


State 74

   36 Statement: Expr SEMI .

    $default  reduce using rule 36 (Statement)


State 75

   20 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA . ParameterDeclaration

    CHAR  shift, and go to state 2
    INT   shift, and go to state 3
    VOID  shift, and go to state 4

    ParameterDeclaration  go to state 84
    TypeSpec              go to state 42


State 76

   22 ParameterDeclaration: TypeSpec Asterisk ID .

    $default  reduce using rule 22 (ParameterDeclaration)


State 77

   39 Statement: FOR LPAR Expr0 . SEMI Expr0 SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 85


State 78

   45 Expr0: Expr .

    $default  reduce using rule 45 (Expr0)


State 79

   44 Expr0: Empty .

    $default  reduce using rule 44 (Expr0)


State 80

   40 StateIF: IF LPAR Expr . RPAR Statement
   41        | IF LPAR Expr . RPAR Statement ELSE Statement

    RPAR  shift, and go to state 86


State 81

   37 Statement: LBRACE Statement1 RBRACE .

    $default  reduce using rule 37 (Statement)


State 82

   46 Expr: LPAR Expr RPAR .

    $default  reduce using rule 46 (Expr)


State 83

   43 Statement: RETURN Expr SEMI .

    $default  reduce using rule 43 (Statement)


State 84

   20 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA ParameterDeclaration .

    $default  reduce using rule 20 (COMMA_ParameterDeclaration)


State 85

   39 Statement: FOR LPAR Expr0 SEMI . Expr0 SEMI Expr0 RPAR Statement

    LPAR    shift, and go to state 50
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    $default  reduce using rule 51 (Empty)

    Expr0  go to state 87
    Expr   go to state 78
    Empty  go to state 79


State 86

   40 StateIF: IF LPAR Expr RPAR . Statement
   41        | IF LPAR Expr RPAR . Statement ELSE Statement

    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    LBRACE  shift, and go to state 49
    LPAR    shift, and go to state 50
    RETURN  shift, and go to state 52
    SEMI    shift, and go to state 53
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Statement  go to state 88
    StateIF    go to state 59
    Expr       go to state 60


State 87

   39 Statement: FOR LPAR Expr0 SEMI Expr0 . SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 89


State 88

   40 StateIF: IF LPAR Expr RPAR Statement .
   41        | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 90

    $default  reduce using rule 40 (StateIF)


State 89

   39 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI . Expr0 RPAR Statement

    LPAR    shift, and go to state 50
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    $default  reduce using rule 51 (Empty)

    Expr0  go to state 91
    Expr   go to state 78
    Empty  go to state 79


State 90

   41 StateIF: IF LPAR Expr RPAR Statement ELSE . Statement

    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    LBRACE  shift, and go to state 49
    LPAR    shift, and go to state 50
    RETURN  shift, and go to state 52
    SEMI    shift, and go to state 53
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Statement  go to state 92
    StateIF    go to state 59
    Expr       go to state 60


State 91

   39 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 . RPAR Statement

    RPAR  shift, and go to state 93


State 92

   41 StateIF: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 41 (StateIF)


State 93

   39 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR . Statement

    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    LBRACE  shift, and go to state 49
    LPAR    shift, and go to state 50
    RETURN  shift, and go to state 52
    SEMI    shift, and go to state 53
    ID      shift, and go to state 54
    INTLIT  shift, and go to state 55
    STRLIT  shift, and go to state 56
    CHRLIT  shift, and go to state 57

    Statement  go to state 94
    StateIF    go to state 59
    Expr       go to state 60


State 94

   39 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement .

    $default  reduce using rule 39 (Statement)

Terminals unused in grammar

   RESERVED


State 65 conflicts: 16 shift/reduce
State 66 conflicts: 16 shift/reduce
State 71 conflicts: 16 shift/reduce
State 72 conflicts: 16 shift/reduce
State 73 conflicts: 16 shift/reduce
State 106 conflicts: 16 shift/reduce
State 107 conflicts: 16 shift/reduce
State 108 conflicts: 16 shift/reduce
State 109 conflicts: 16 shift/reduce
State 110 conflicts: 16 shift/reduce
State 111 conflicts: 16 shift/reduce
State 112 conflicts: 16 shift/reduce
State 113 conflicts: 16 shift/reduce
State 114 conflicts: 16 shift/reduce
State 116 conflicts: 16 shift/reduce
State 117 conflicts: 16 shift/reduce
State 118 conflicts: 16 shift/reduce
State 119 conflicts: 16 shift/reduce
State 120 conflicts: 16 shift/reduce
State 121 conflicts: 16 shift/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 16 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Start $end

    1 Start: FuncDefDecDec FuncDefDecDec1

    2 FuncDefDecDec: FunctionDefinition
    3              | FunctionDeclaration
    4              | Declaration

    5 FuncDefDecDec1: Empty
    6               | FuncDefDecDec1 FuncDefDecDec

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   10 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR

   11 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration

   12 ParameterDeclaration: TypeSpec Asterisk
   13                     | TypeSpec Asterisk ID

   14 Declaration: TypeSpec Declarator COMMA_Declarator SEMI

   15 TypeSpec: CHAR
   16         | INT
   17         | VOID

   18 Declarator: Asterisk ID
   19           | Asterisk ID LSQ INTLIT RSQ

   20 Statement: SEMI
   21          | Expr SEMI
   22          | LBRACE Statement1 RBRACE
   23          | IF LPAR Expr RPAR Statement ElseStatement
   24          | FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement
   25          | RETURN SEMI
   26          | RETURN Expr SEMI

   27 ElseStatement: Empty
   28              | ELSE Statement

   29 Expr: Expr ASSIGN Expr
   30     | Expr COMMA Expr
   31     | Expr AND Expr
   32     | Expr OR Expr
   33     | Expr EQ Expr
   34     | Expr NE Expr
   35     | Expr LT Expr
   36     | Expr GT Expr
   37     | Expr LE Expr
   38     | Expr GE Expr
   39     | Expr PLUS Expr
   40     | Expr MINUS Expr
   41     | Expr AST Expr
   42     | Expr DIV Expr
   43     | Expr MOD Expr
   44     | AMP Expr
   45     | AST Expr
   46     | PLUS Expr
   47     | MINUS Expr
   48     | NOT Expr
   49     | Expr LSQ Expr RSQ
   50     | ID LPAR Expr_COMMAExpr RPAR
   51     | ID
   52     | INTLIT
   53     | CHRLIT
   54     | STRLIT
   55     | LPAR Expr RPAR

   56 Declaration1: Empty
   57             | Declaration1 Declaration

   58 Statement1: Empty
   59           | Statement1 Statement

   60 Asterisk: Empty
   61         | Asterisk AST

   62 COMMA_ParameterDeclaration: Empty
   63                           | COMMA_ParameterDeclaration COMMA ParameterDeclaration

   64 COMMA_Declarator: Empty
   65                 | COMMA_Declarator COMMA Declarator

   66 Expr0: Expr
   67      | Empty

   68 Expr_COMMAExpr: Empty
   69               | Expr COMMA_Expr

   70 COMMA_Expr: Empty
   71           | COMMA Expr COMMA_Expr

   72 Empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
AMP (258) 44
AND (259) 31
ASSIGN (260) 29
AST (261) 41 45 61
CHAR (262) 15
COMMA (263) 30 63 65 71
DIV (264) 42
ELSE (265) 28
EQ (266) 33
FOR (267) 24
GE (268) 38
GT (269) 36
IF (270) 23
INT (271) 16
LBRACE (272) 8 22
LE (273) 37
LPAR (274) 10 23 24 50 55
LSQ (275) 19 49
LT (276) 35
MINUS (277) 40 47
MOD (278) 43
NE (279) 34
NOT (280) 48
OR (281) 32
PLUS (282) 39 46
RBRACE (283) 8 22
RETURN (284) 25 26
RPAR (285) 10 23 24 50 55
RSQ (286) 19 49
SEMI (287) 9 14 20 21 24 25 26
VOID (288) 17
RESERVED (289)
ID (290) 10 13 18 19 50 51
INTLIT (291) 19 52
STRLIT (292) 54
CHRLIT (293) 53


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Start (40)
    on left: 1, on right: 0
FuncDefDecDec (41)
    on left: 2 3 4, on right: 1 6
FuncDefDecDec1 (42)
    on left: 5 6, on right: 1 6
FunctionDefinition (43)
    on left: 7, on right: 2
FunctionBody (44)
    on left: 8, on right: 7
FunctionDeclaration (45)
    on left: 9, on right: 3
FunctionDeclarator (46)
    on left: 10, on right: 7 9
ParameterList (47)
    on left: 11, on right: 10
ParameterDeclaration (48)
    on left: 12 13, on right: 11 63
Declaration (49)
    on left: 14, on right: 4 57
TypeSpec (50)
    on left: 15 16 17, on right: 7 9 12 13 14
Declarator (51)
    on left: 18 19, on right: 14 65
Statement (52)
    on left: 20 21 22 23 24 25 26, on right: 23 24 28 59
ElseStatement (53)
    on left: 27 28, on right: 23
Expr (54)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 53 54 55, on right: 21 23 26 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 55 66 69 71
Declaration1 (55)
    on left: 56 57, on right: 8 57
Statement1 (56)
    on left: 58 59, on right: 8 22 59
Asterisk (57)
    on left: 60 61, on right: 10 12 13 18 19 61
COMMA_ParameterDeclaration (58)
    on left: 62 63, on right: 11 63
COMMA_Declarator (59)
    on left: 64 65, on right: 14 65
Expr0 (60)
    on left: 66 67, on right: 24
Expr_COMMAExpr (61)
    on left: 68 69, on right: 50
COMMA_Expr (62)
    on left: 70 71, on right: 69 71
Empty (63)
    on left: 72, on right: 5 27 56 58 60 62 64 67 68 70


State 0

    0 $accept: . Start $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    Start                go to state 4
    FuncDefDecDec        go to state 5
    FunctionDefinition   go to state 6
    FunctionDeclaration  go to state 7
    Declaration          go to state 8
    TypeSpec             go to state 9


State 1

   15 TypeSpec: CHAR .

    $default  reduce using rule 15 (TypeSpec)


State 2

   16 TypeSpec: INT .

    $default  reduce using rule 16 (TypeSpec)


State 3

   17 TypeSpec: VOID .

    $default  reduce using rule 17 (TypeSpec)


State 4

    0 $accept: Start . $end

    $end  shift, and go to state 10


State 5

    1 Start: FuncDefDecDec . FuncDefDecDec1

    $default  reduce using rule 72 (Empty)

    FuncDefDecDec1  go to state 11
    Empty           go to state 12


State 6

    2 FuncDefDecDec: FunctionDefinition .

    $default  reduce using rule 2 (FuncDefDecDec)


State 7

    3 FuncDefDecDec: FunctionDeclaration .

    $default  reduce using rule 3 (FuncDefDecDec)


State 8

    4 FuncDefDecDec: Declaration .

    $default  reduce using rule 4 (FuncDefDecDec)


State 9

    7 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
    9 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   14 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 72 (Empty)

    FunctionDeclarator  go to state 13
    Declarator          go to state 14
    Asterisk            go to state 15
    Empty               go to state 16


State 10

    0 $accept: Start $end .

    $default  accept


State 11

    1 Start: FuncDefDecDec FuncDefDecDec1 .
    6 FuncDefDecDec1: FuncDefDecDec1 . FuncDefDecDec

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 1 (Start)

    FuncDefDecDec        go to state 17
    FunctionDefinition   go to state 6
    FunctionDeclaration  go to state 7
    Declaration          go to state 8
    TypeSpec             go to state 9


State 12

    5 FuncDefDecDec1: Empty .

    $default  reduce using rule 5 (FuncDefDecDec1)


State 13

    7 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
    9 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 18
    SEMI    shift, and go to state 19

    FunctionBody  go to state 20


State 14

   14 Declaration: TypeSpec Declarator . COMMA_Declarator SEMI

    $default  reduce using rule 72 (Empty)

    COMMA_Declarator  go to state 21
    Empty             go to state 22


State 15

   10 FunctionDeclarator: Asterisk . ID LPAR ParameterList RPAR
   18 Declarator: Asterisk . ID
   19           | Asterisk . ID LSQ INTLIT RSQ
   61 Asterisk: Asterisk . AST

    AST  shift, and go to state 23
    ID   shift, and go to state 24


State 16

   60 Asterisk: Empty .

    $default  reduce using rule 60 (Asterisk)


State 17

    6 FuncDefDecDec1: FuncDefDecDec1 FuncDefDecDec .

    $default  reduce using rule 6 (FuncDefDecDec1)


State 18

    8 FunctionBody: LBRACE . Declaration1 Statement1 RBRACE

    $default  reduce using rule 72 (Empty)

    Declaration1  go to state 25
    Empty         go to state 26


State 19

    9 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 9 (FunctionDeclaration)


State 20

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 7 (FunctionDefinition)


State 21

   14 Declaration: TypeSpec Declarator COMMA_Declarator . SEMI
   65 COMMA_Declarator: COMMA_Declarator . COMMA Declarator

    COMMA  shift, and go to state 27
    SEMI   shift, and go to state 28


State 22

   64 COMMA_Declarator: Empty .

    $default  reduce using rule 64 (COMMA_Declarator)


State 23

   61 Asterisk: Asterisk AST .

    $default  reduce using rule 61 (Asterisk)


State 24

   10 FunctionDeclarator: Asterisk ID . LPAR ParameterList RPAR
   18 Declarator: Asterisk ID .
   19           | Asterisk ID . LSQ INTLIT RSQ

    LPAR  shift, and go to state 29
    LSQ   shift, and go to state 30

    $default  reduce using rule 18 (Declarator)


State 25

    8 FunctionBody: LBRACE Declaration1 . Statement1 RBRACE
   57 Declaration1: Declaration1 . Declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 72 (Empty)

    Declaration  go to state 31
    TypeSpec     go to state 32
    Statement1   go to state 33
    Empty        go to state 34


State 26

   56 Declaration1: Empty .

    $default  reduce using rule 56 (Declaration1)


State 27

   65 COMMA_Declarator: COMMA_Declarator COMMA . Declarator

    $default  reduce using rule 72 (Empty)

    Declarator  go to state 35
    Asterisk    go to state 36
    Empty       go to state 16


State 28

   14 Declaration: TypeSpec Declarator COMMA_Declarator SEMI .

    $default  reduce using rule 14 (Declaration)


State 29

   10 FunctionDeclarator: Asterisk ID LPAR . ParameterList RPAR

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    ParameterList         go to state 37
    ParameterDeclaration  go to state 38
    TypeSpec              go to state 39


State 30

   19 Declarator: Asterisk ID LSQ . INTLIT RSQ

    INTLIT  shift, and go to state 40


State 31

   57 Declaration1: Declaration1 Declaration .

    $default  reduce using rule 57 (Declaration1)


State 32

   14 Declaration: TypeSpec . Declarator COMMA_Declarator SEMI

    $default  reduce using rule 72 (Empty)

    Declarator  go to state 14
    Asterisk    go to state 36
    Empty       go to state 16


State 33

    8 FunctionBody: LBRACE Declaration1 Statement1 . RBRACE
   59 Statement1: Statement1 . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    RBRACE  shift, and go to state 50
    RETURN  shift, and go to state 51
    SEMI    shift, and go to state 52
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Statement  go to state 57
    Expr       go to state 58


State 34

   58 Statement1: Empty .

    $default  reduce using rule 58 (Statement1)


State 35

   65 COMMA_Declarator: COMMA_Declarator COMMA Declarator .

    $default  reduce using rule 65 (COMMA_Declarator)


State 36

   18 Declarator: Asterisk . ID
   19           | Asterisk . ID LSQ INTLIT RSQ
   61 Asterisk: Asterisk . AST

    AST  shift, and go to state 23
    ID   shift, and go to state 59


State 37

   10 FunctionDeclarator: Asterisk ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 60


State 38

   11 ParameterList: ParameterDeclaration . COMMA_ParameterDeclaration

    $default  reduce using rule 72 (Empty)

    COMMA_ParameterDeclaration  go to state 61
    Empty                       go to state 62


State 39

   12 ParameterDeclaration: TypeSpec . Asterisk
   13                     | TypeSpec . Asterisk ID

    $default  reduce using rule 72 (Empty)

    Asterisk  go to state 63
    Empty     go to state 16


State 40

   19 Declarator: Asterisk ID LSQ INTLIT . RSQ

    RSQ  shift, and go to state 64


State 41

   44 Expr: AMP . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 65


State 42

   45 Expr: AST . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 66


State 43

   24 Statement: FOR . LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    LPAR  shift, and go to state 67


State 44

   23 Statement: IF . LPAR Expr RPAR Statement ElseStatement

    LPAR  shift, and go to state 68


State 45

   22 Statement: LBRACE . Statement1 RBRACE

    $default  reduce using rule 72 (Empty)

    Statement1  go to state 69
    Empty       go to state 34


State 46

   55 Expr: LPAR . Expr RPAR

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 70


State 47

   47 Expr: MINUS . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 71


State 48

   48 Expr: NOT . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 72


State 49

   46 Expr: PLUS . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 73


State 50

    8 FunctionBody: LBRACE Declaration1 Statement1 RBRACE .

    $default  reduce using rule 8 (FunctionBody)


State 51

   25 Statement: RETURN . SEMI
   26          | RETURN . Expr SEMI

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    SEMI    shift, and go to state 74
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 75


State 52

   20 Statement: SEMI .

    $default  reduce using rule 20 (Statement)


State 53

   50 Expr: ID . LPAR Expr_COMMAExpr RPAR
   51     | ID .

    LPAR  shift, and go to state 76

    $default  reduce using rule 51 (Expr)


State 54

   52 Expr: INTLIT .

    $default  reduce using rule 52 (Expr)


State 55

   54 Expr: STRLIT .

    $default  reduce using rule 54 (Expr)


State 56

   53 Expr: CHRLIT .

    $default  reduce using rule 53 (Expr)


State 57

   59 Statement1: Statement1 Statement .

    $default  reduce using rule 59 (Statement1)


State 58

   21 Statement: Expr . SEMI
   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92
    SEMI    shift, and go to state 93


State 59

   18 Declarator: Asterisk ID .
   19           | Asterisk ID . LSQ INTLIT RSQ

    LSQ  shift, and go to state 30

    $default  reduce using rule 18 (Declarator)


State 60

   10 FunctionDeclarator: Asterisk ID LPAR ParameterList RPAR .

    $default  reduce using rule 10 (FunctionDeclarator)


State 61

   11 ParameterList: ParameterDeclaration COMMA_ParameterDeclaration .
   63 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration . COMMA ParameterDeclaration

    COMMA  shift, and go to state 94

    $default  reduce using rule 11 (ParameterList)


State 62

   62 COMMA_ParameterDeclaration: Empty .

    $default  reduce using rule 62 (COMMA_ParameterDeclaration)


State 63

   12 ParameterDeclaration: TypeSpec Asterisk .
   13                     | TypeSpec Asterisk . ID
   61 Asterisk: Asterisk . AST

    AST  shift, and go to state 23
    ID   shift, and go to state 95

    $default  reduce using rule 12 (ParameterDeclaration)


State 64

   19 Declarator: Asterisk ID LSQ INTLIT RSQ .

    $default  reduce using rule 19 (Declarator)


State 65

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   44     | AMP Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 44 (Expr)]
    ASSIGN    [reduce using rule 44 (Expr)]
    AST       [reduce using rule 44 (Expr)]
    COMMA     [reduce using rule 44 (Expr)]
    DIV       [reduce using rule 44 (Expr)]
    EQ        [reduce using rule 44 (Expr)]
    GE        [reduce using rule 44 (Expr)]
    GT        [reduce using rule 44 (Expr)]
    LE        [reduce using rule 44 (Expr)]
    LSQ       [reduce using rule 44 (Expr)]
    LT        [reduce using rule 44 (Expr)]
    MINUS     [reduce using rule 44 (Expr)]
    MOD       [reduce using rule 44 (Expr)]
    NE        [reduce using rule 44 (Expr)]
    OR        [reduce using rule 44 (Expr)]
    PLUS      [reduce using rule 44 (Expr)]
    $default  reduce using rule 44 (Expr)


State 66

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   45     | AST Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 45 (Expr)]
    ASSIGN    [reduce using rule 45 (Expr)]
    AST       [reduce using rule 45 (Expr)]
    COMMA     [reduce using rule 45 (Expr)]
    DIV       [reduce using rule 45 (Expr)]
    EQ        [reduce using rule 45 (Expr)]
    GE        [reduce using rule 45 (Expr)]
    GT        [reduce using rule 45 (Expr)]
    LE        [reduce using rule 45 (Expr)]
    LSQ       [reduce using rule 45 (Expr)]
    LT        [reduce using rule 45 (Expr)]
    MINUS     [reduce using rule 45 (Expr)]
    MOD       [reduce using rule 45 (Expr)]
    NE        [reduce using rule 45 (Expr)]
    OR        [reduce using rule 45 (Expr)]
    PLUS      [reduce using rule 45 (Expr)]
    $default  reduce using rule 45 (Expr)


State 67

   24 Statement: FOR LPAR . Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    $default  reduce using rule 72 (Empty)

    Expr   go to state 96
    Expr0  go to state 97
    Empty  go to state 98


State 68

   23 Statement: IF LPAR . Expr RPAR Statement ElseStatement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 99


State 69

   22 Statement: LBRACE Statement1 . RBRACE
   59 Statement1: Statement1 . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    RBRACE  shift, and go to state 100
    RETURN  shift, and go to state 51
    SEMI    shift, and go to state 52
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Statement  go to state 57
    Expr       go to state 58


State 70

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ
   55     | LPAR Expr . RPAR

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92
    RPAR    shift, and go to state 101


State 71

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   47     | MINUS Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 47 (Expr)]
    ASSIGN    [reduce using rule 47 (Expr)]
    AST       [reduce using rule 47 (Expr)]
    COMMA     [reduce using rule 47 (Expr)]
    DIV       [reduce using rule 47 (Expr)]
    EQ        [reduce using rule 47 (Expr)]
    GE        [reduce using rule 47 (Expr)]
    GT        [reduce using rule 47 (Expr)]
    LE        [reduce using rule 47 (Expr)]
    LSQ       [reduce using rule 47 (Expr)]
    LT        [reduce using rule 47 (Expr)]
    MINUS     [reduce using rule 47 (Expr)]
    MOD       [reduce using rule 47 (Expr)]
    NE        [reduce using rule 47 (Expr)]
    OR        [reduce using rule 47 (Expr)]
    PLUS      [reduce using rule 47 (Expr)]
    $default  reduce using rule 47 (Expr)


State 72

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   48     | NOT Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 48 (Expr)]
    ASSIGN    [reduce using rule 48 (Expr)]
    AST       [reduce using rule 48 (Expr)]
    COMMA     [reduce using rule 48 (Expr)]
    DIV       [reduce using rule 48 (Expr)]
    EQ        [reduce using rule 48 (Expr)]
    GE        [reduce using rule 48 (Expr)]
    GT        [reduce using rule 48 (Expr)]
    LE        [reduce using rule 48 (Expr)]
    LSQ       [reduce using rule 48 (Expr)]
    LT        [reduce using rule 48 (Expr)]
    MINUS     [reduce using rule 48 (Expr)]
    MOD       [reduce using rule 48 (Expr)]
    NE        [reduce using rule 48 (Expr)]
    OR        [reduce using rule 48 (Expr)]
    PLUS      [reduce using rule 48 (Expr)]
    $default  reduce using rule 48 (Expr)


State 73

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   46     | PLUS Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 46 (Expr)]
    ASSIGN    [reduce using rule 46 (Expr)]
    AST       [reduce using rule 46 (Expr)]
    COMMA     [reduce using rule 46 (Expr)]
    DIV       [reduce using rule 46 (Expr)]
    EQ        [reduce using rule 46 (Expr)]
    GE        [reduce using rule 46 (Expr)]
    GT        [reduce using rule 46 (Expr)]
    LE        [reduce using rule 46 (Expr)]
    LSQ       [reduce using rule 46 (Expr)]
    LT        [reduce using rule 46 (Expr)]
    MINUS     [reduce using rule 46 (Expr)]
    MOD       [reduce using rule 46 (Expr)]
    NE        [reduce using rule 46 (Expr)]
    OR        [reduce using rule 46 (Expr)]
    PLUS      [reduce using rule 46 (Expr)]
    $default  reduce using rule 46 (Expr)


State 74

   25 Statement: RETURN SEMI .

    $default  reduce using rule 25 (Statement)


State 75

   26 Statement: RETURN Expr . SEMI
   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92
    SEMI    shift, and go to state 102


State 76

   50 Expr: ID LPAR . Expr_COMMAExpr RPAR

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    $default  reduce using rule 72 (Empty)

    Expr            go to state 103
    Expr_COMMAExpr  go to state 104
    Empty           go to state 105


State 77

   31 Expr: Expr AND . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 106


State 78

   29 Expr: Expr ASSIGN . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 107


State 79

   41 Expr: Expr AST . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 108


State 80

   30 Expr: Expr COMMA . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 109


State 81

   42 Expr: Expr DIV . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 110


State 82

   33 Expr: Expr EQ . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 111


State 83

   38 Expr: Expr GE . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 112


State 84

   36 Expr: Expr GT . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 113


State 85

   37 Expr: Expr LE . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 114


State 86

   49 Expr: Expr LSQ . Expr RSQ

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 115


State 87

   35 Expr: Expr LT . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 116


State 88

   40 Expr: Expr MINUS . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 117


State 89

   43 Expr: Expr MOD . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 118


State 90

   34 Expr: Expr NE . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 119


State 91

   32 Expr: Expr OR . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 120


State 92

   39 Expr: Expr PLUS . Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 121


State 93

   21 Statement: Expr SEMI .

    $default  reduce using rule 21 (Statement)


State 94

   63 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA . ParameterDeclaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    ParameterDeclaration  go to state 122
    TypeSpec              go to state 39


State 95

   13 ParameterDeclaration: TypeSpec Asterisk ID .

    $default  reduce using rule 13 (ParameterDeclaration)


State 96

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ
   66 Expr0: Expr .

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    $default  reduce using rule 66 (Expr0)


State 97

   24 Statement: FOR LPAR Expr0 . SEMI Expr0 SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 123


State 98

   67 Expr0: Empty .

    $default  reduce using rule 67 (Expr0)


State 99

   23 Statement: IF LPAR Expr . RPAR Statement ElseStatement
   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92
    RPAR    shift, and go to state 124


State 100

   22 Statement: LBRACE Statement1 RBRACE .

    $default  reduce using rule 22 (Statement)


State 101

   55 Expr: LPAR Expr RPAR .

    $default  reduce using rule 55 (Expr)


State 102

   26 Statement: RETURN Expr SEMI .

    $default  reduce using rule 26 (Statement)


State 103

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ
   69 Expr_COMMAExpr: Expr . COMMA_Expr

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 125
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    $default  reduce using rule 72 (Empty)

    COMMA_Expr  go to state 126
    Empty       go to state 127


State 104

   50 Expr: ID LPAR Expr_COMMAExpr . RPAR

    RPAR  shift, and go to state 128


State 105

   68 Expr_COMMAExpr: Empty .

    $default  reduce using rule 68 (Expr_COMMAExpr)


State 106

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   31     | Expr AND Expr .
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 31 (Expr)]
    ASSIGN    [reduce using rule 31 (Expr)]
    AST       [reduce using rule 31 (Expr)]
    COMMA     [reduce using rule 31 (Expr)]
    DIV       [reduce using rule 31 (Expr)]
    EQ        [reduce using rule 31 (Expr)]
    GE        [reduce using rule 31 (Expr)]
    GT        [reduce using rule 31 (Expr)]
    LE        [reduce using rule 31 (Expr)]
    LSQ       [reduce using rule 31 (Expr)]
    LT        [reduce using rule 31 (Expr)]
    MINUS     [reduce using rule 31 (Expr)]
    MOD       [reduce using rule 31 (Expr)]
    NE        [reduce using rule 31 (Expr)]
    OR        [reduce using rule 31 (Expr)]
    PLUS      [reduce using rule 31 (Expr)]
    $default  reduce using rule 31 (Expr)


State 107

   29 Expr: Expr . ASSIGN Expr
   29     | Expr ASSIGN Expr .
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 29 (Expr)]
    ASSIGN    [reduce using rule 29 (Expr)]
    AST       [reduce using rule 29 (Expr)]
    COMMA     [reduce using rule 29 (Expr)]
    DIV       [reduce using rule 29 (Expr)]
    EQ        [reduce using rule 29 (Expr)]
    GE        [reduce using rule 29 (Expr)]
    GT        [reduce using rule 29 (Expr)]
    LE        [reduce using rule 29 (Expr)]
    LSQ       [reduce using rule 29 (Expr)]
    LT        [reduce using rule 29 (Expr)]
    MINUS     [reduce using rule 29 (Expr)]
    MOD       [reduce using rule 29 (Expr)]
    NE        [reduce using rule 29 (Expr)]
    OR        [reduce using rule 29 (Expr)]
    PLUS      [reduce using rule 29 (Expr)]
    $default  reduce using rule 29 (Expr)


State 108

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   41     | Expr AST Expr .
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 41 (Expr)]
    ASSIGN    [reduce using rule 41 (Expr)]
    AST       [reduce using rule 41 (Expr)]
    COMMA     [reduce using rule 41 (Expr)]
    DIV       [reduce using rule 41 (Expr)]
    EQ        [reduce using rule 41 (Expr)]
    GE        [reduce using rule 41 (Expr)]
    GT        [reduce using rule 41 (Expr)]
    LE        [reduce using rule 41 (Expr)]
    LSQ       [reduce using rule 41 (Expr)]
    LT        [reduce using rule 41 (Expr)]
    MINUS     [reduce using rule 41 (Expr)]
    MOD       [reduce using rule 41 (Expr)]
    NE        [reduce using rule 41 (Expr)]
    OR        [reduce using rule 41 (Expr)]
    PLUS      [reduce using rule 41 (Expr)]
    $default  reduce using rule 41 (Expr)


State 109

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   30     | Expr COMMA Expr .
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 30 (Expr)]
    ASSIGN    [reduce using rule 30 (Expr)]
    AST       [reduce using rule 30 (Expr)]
    COMMA     [reduce using rule 30 (Expr)]
    DIV       [reduce using rule 30 (Expr)]
    EQ        [reduce using rule 30 (Expr)]
    GE        [reduce using rule 30 (Expr)]
    GT        [reduce using rule 30 (Expr)]
    LE        [reduce using rule 30 (Expr)]
    LSQ       [reduce using rule 30 (Expr)]
    LT        [reduce using rule 30 (Expr)]
    MINUS     [reduce using rule 30 (Expr)]
    MOD       [reduce using rule 30 (Expr)]
    NE        [reduce using rule 30 (Expr)]
    OR        [reduce using rule 30 (Expr)]
    PLUS      [reduce using rule 30 (Expr)]
    $default  reduce using rule 30 (Expr)


State 110

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   42     | Expr DIV Expr .
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 42 (Expr)]
    ASSIGN    [reduce using rule 42 (Expr)]
    AST       [reduce using rule 42 (Expr)]
    COMMA     [reduce using rule 42 (Expr)]
    DIV       [reduce using rule 42 (Expr)]
    EQ        [reduce using rule 42 (Expr)]
    GE        [reduce using rule 42 (Expr)]
    GT        [reduce using rule 42 (Expr)]
    LE        [reduce using rule 42 (Expr)]
    LSQ       [reduce using rule 42 (Expr)]
    LT        [reduce using rule 42 (Expr)]
    MINUS     [reduce using rule 42 (Expr)]
    MOD       [reduce using rule 42 (Expr)]
    NE        [reduce using rule 42 (Expr)]
    OR        [reduce using rule 42 (Expr)]
    PLUS      [reduce using rule 42 (Expr)]
    $default  reduce using rule 42 (Expr)


State 111

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   33     | Expr EQ Expr .
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 33 (Expr)]
    ASSIGN    [reduce using rule 33 (Expr)]
    AST       [reduce using rule 33 (Expr)]
    COMMA     [reduce using rule 33 (Expr)]
    DIV       [reduce using rule 33 (Expr)]
    EQ        [reduce using rule 33 (Expr)]
    GE        [reduce using rule 33 (Expr)]
    GT        [reduce using rule 33 (Expr)]
    LE        [reduce using rule 33 (Expr)]
    LSQ       [reduce using rule 33 (Expr)]
    LT        [reduce using rule 33 (Expr)]
    MINUS     [reduce using rule 33 (Expr)]
    MOD       [reduce using rule 33 (Expr)]
    NE        [reduce using rule 33 (Expr)]
    OR        [reduce using rule 33 (Expr)]
    PLUS      [reduce using rule 33 (Expr)]
    $default  reduce using rule 33 (Expr)


State 112

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   38     | Expr GE Expr .
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 38 (Expr)]
    ASSIGN    [reduce using rule 38 (Expr)]
    AST       [reduce using rule 38 (Expr)]
    COMMA     [reduce using rule 38 (Expr)]
    DIV       [reduce using rule 38 (Expr)]
    EQ        [reduce using rule 38 (Expr)]
    GE        [reduce using rule 38 (Expr)]
    GT        [reduce using rule 38 (Expr)]
    LE        [reduce using rule 38 (Expr)]
    LSQ       [reduce using rule 38 (Expr)]
    LT        [reduce using rule 38 (Expr)]
    MINUS     [reduce using rule 38 (Expr)]
    MOD       [reduce using rule 38 (Expr)]
    NE        [reduce using rule 38 (Expr)]
    OR        [reduce using rule 38 (Expr)]
    PLUS      [reduce using rule 38 (Expr)]
    $default  reduce using rule 38 (Expr)


State 113

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   36     | Expr GT Expr .
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 36 (Expr)]
    ASSIGN    [reduce using rule 36 (Expr)]
    AST       [reduce using rule 36 (Expr)]
    COMMA     [reduce using rule 36 (Expr)]
    DIV       [reduce using rule 36 (Expr)]
    EQ        [reduce using rule 36 (Expr)]
    GE        [reduce using rule 36 (Expr)]
    GT        [reduce using rule 36 (Expr)]
    LE        [reduce using rule 36 (Expr)]
    LSQ       [reduce using rule 36 (Expr)]
    LT        [reduce using rule 36 (Expr)]
    MINUS     [reduce using rule 36 (Expr)]
    MOD       [reduce using rule 36 (Expr)]
    NE        [reduce using rule 36 (Expr)]
    OR        [reduce using rule 36 (Expr)]
    PLUS      [reduce using rule 36 (Expr)]
    $default  reduce using rule 36 (Expr)


State 114

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   37     | Expr LE Expr .
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 37 (Expr)]
    ASSIGN    [reduce using rule 37 (Expr)]
    AST       [reduce using rule 37 (Expr)]
    COMMA     [reduce using rule 37 (Expr)]
    DIV       [reduce using rule 37 (Expr)]
    EQ        [reduce using rule 37 (Expr)]
    GE        [reduce using rule 37 (Expr)]
    GT        [reduce using rule 37 (Expr)]
    LE        [reduce using rule 37 (Expr)]
    LSQ       [reduce using rule 37 (Expr)]
    LT        [reduce using rule 37 (Expr)]
    MINUS     [reduce using rule 37 (Expr)]
    MOD       [reduce using rule 37 (Expr)]
    NE        [reduce using rule 37 (Expr)]
    OR        [reduce using rule 37 (Expr)]
    PLUS      [reduce using rule 37 (Expr)]
    $default  reduce using rule 37 (Expr)


State 115

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ
   49     | Expr LSQ Expr . RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92
    RSQ     shift, and go to state 129


State 116

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   35     | Expr LT Expr .
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 35 (Expr)]
    ASSIGN    [reduce using rule 35 (Expr)]
    AST       [reduce using rule 35 (Expr)]
    COMMA     [reduce using rule 35 (Expr)]
    DIV       [reduce using rule 35 (Expr)]
    EQ        [reduce using rule 35 (Expr)]
    GE        [reduce using rule 35 (Expr)]
    GT        [reduce using rule 35 (Expr)]
    LE        [reduce using rule 35 (Expr)]
    LSQ       [reduce using rule 35 (Expr)]
    LT        [reduce using rule 35 (Expr)]
    MINUS     [reduce using rule 35 (Expr)]
    MOD       [reduce using rule 35 (Expr)]
    NE        [reduce using rule 35 (Expr)]
    OR        [reduce using rule 35 (Expr)]
    PLUS      [reduce using rule 35 (Expr)]
    $default  reduce using rule 35 (Expr)


State 117

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   40     | Expr MINUS Expr .
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 40 (Expr)]
    ASSIGN    [reduce using rule 40 (Expr)]
    AST       [reduce using rule 40 (Expr)]
    COMMA     [reduce using rule 40 (Expr)]
    DIV       [reduce using rule 40 (Expr)]
    EQ        [reduce using rule 40 (Expr)]
    GE        [reduce using rule 40 (Expr)]
    GT        [reduce using rule 40 (Expr)]
    LE        [reduce using rule 40 (Expr)]
    LSQ       [reduce using rule 40 (Expr)]
    LT        [reduce using rule 40 (Expr)]
    MINUS     [reduce using rule 40 (Expr)]
    MOD       [reduce using rule 40 (Expr)]
    NE        [reduce using rule 40 (Expr)]
    OR        [reduce using rule 40 (Expr)]
    PLUS      [reduce using rule 40 (Expr)]
    $default  reduce using rule 40 (Expr)


State 118

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   43     | Expr MOD Expr .
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 43 (Expr)]
    ASSIGN    [reduce using rule 43 (Expr)]
    AST       [reduce using rule 43 (Expr)]
    COMMA     [reduce using rule 43 (Expr)]
    DIV       [reduce using rule 43 (Expr)]
    EQ        [reduce using rule 43 (Expr)]
    GE        [reduce using rule 43 (Expr)]
    GT        [reduce using rule 43 (Expr)]
    LE        [reduce using rule 43 (Expr)]
    LSQ       [reduce using rule 43 (Expr)]
    LT        [reduce using rule 43 (Expr)]
    MINUS     [reduce using rule 43 (Expr)]
    MOD       [reduce using rule 43 (Expr)]
    NE        [reduce using rule 43 (Expr)]
    OR        [reduce using rule 43 (Expr)]
    PLUS      [reduce using rule 43 (Expr)]
    $default  reduce using rule 43 (Expr)


State 119

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   34     | Expr NE Expr .
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 34 (Expr)]
    ASSIGN    [reduce using rule 34 (Expr)]
    AST       [reduce using rule 34 (Expr)]
    COMMA     [reduce using rule 34 (Expr)]
    DIV       [reduce using rule 34 (Expr)]
    EQ        [reduce using rule 34 (Expr)]
    GE        [reduce using rule 34 (Expr)]
    GT        [reduce using rule 34 (Expr)]
    LE        [reduce using rule 34 (Expr)]
    LSQ       [reduce using rule 34 (Expr)]
    LT        [reduce using rule 34 (Expr)]
    MINUS     [reduce using rule 34 (Expr)]
    MOD       [reduce using rule 34 (Expr)]
    NE        [reduce using rule 34 (Expr)]
    OR        [reduce using rule 34 (Expr)]
    PLUS      [reduce using rule 34 (Expr)]
    $default  reduce using rule 34 (Expr)


State 120

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   32     | Expr OR Expr .
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 32 (Expr)]
    ASSIGN    [reduce using rule 32 (Expr)]
    AST       [reduce using rule 32 (Expr)]
    COMMA     [reduce using rule 32 (Expr)]
    DIV       [reduce using rule 32 (Expr)]
    EQ        [reduce using rule 32 (Expr)]
    GE        [reduce using rule 32 (Expr)]
    GT        [reduce using rule 32 (Expr)]
    LE        [reduce using rule 32 (Expr)]
    LSQ       [reduce using rule 32 (Expr)]
    LT        [reduce using rule 32 (Expr)]
    MINUS     [reduce using rule 32 (Expr)]
    MOD       [reduce using rule 32 (Expr)]
    NE        [reduce using rule 32 (Expr)]
    OR        [reduce using rule 32 (Expr)]
    PLUS      [reduce using rule 32 (Expr)]
    $default  reduce using rule 32 (Expr)


State 121

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   39     | Expr PLUS Expr .
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 80
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 39 (Expr)]
    ASSIGN    [reduce using rule 39 (Expr)]
    AST       [reduce using rule 39 (Expr)]
    COMMA     [reduce using rule 39 (Expr)]
    DIV       [reduce using rule 39 (Expr)]
    EQ        [reduce using rule 39 (Expr)]
    GE        [reduce using rule 39 (Expr)]
    GT        [reduce using rule 39 (Expr)]
    LE        [reduce using rule 39 (Expr)]
    LSQ       [reduce using rule 39 (Expr)]
    LT        [reduce using rule 39 (Expr)]
    MINUS     [reduce using rule 39 (Expr)]
    MOD       [reduce using rule 39 (Expr)]
    NE        [reduce using rule 39 (Expr)]
    OR        [reduce using rule 39 (Expr)]
    PLUS      [reduce using rule 39 (Expr)]
    $default  reduce using rule 39 (Expr)


State 122

   63 COMMA_ParameterDeclaration: COMMA_ParameterDeclaration COMMA ParameterDeclaration .

    $default  reduce using rule 63 (COMMA_ParameterDeclaration)


State 123

   24 Statement: FOR LPAR Expr0 SEMI . Expr0 SEMI Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    $default  reduce using rule 72 (Empty)

    Expr   go to state 96
    Expr0  go to state 130
    Empty  go to state 98


State 124

   23 Statement: IF LPAR Expr RPAR . Statement ElseStatement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    RETURN  shift, and go to state 51
    SEMI    shift, and go to state 52
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Statement  go to state 131
    Expr       go to state 58


State 125

   30 Expr: Expr COMMA . Expr
   71 COMMA_Expr: COMMA . Expr COMMA_Expr

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Expr  go to state 132


State 126

   69 Expr_COMMAExpr: Expr COMMA_Expr .

    $default  reduce using rule 69 (Expr_COMMAExpr)


State 127

   70 COMMA_Expr: Empty .

    $default  reduce using rule 70 (COMMA_Expr)


State 128

   50 Expr: ID LPAR Expr_COMMAExpr RPAR .

    $default  reduce using rule 50 (Expr)


State 129

   49 Expr: Expr LSQ Expr RSQ .

    $default  reduce using rule 49 (Expr)


State 130

   24 Statement: FOR LPAR Expr0 SEMI Expr0 . SEMI Expr0 RPAR Statement

    SEMI  shift, and go to state 133


State 131

   23 Statement: IF LPAR Expr RPAR Statement . ElseStatement

    ELSE  shift, and go to state 134

    ELSE      [reduce using rule 72 (Empty)]
    $default  reduce using rule 72 (Empty)

    ElseStatement  go to state 135
    Empty          go to state 136


State 132

   29 Expr: Expr . ASSIGN Expr
   30     | Expr . COMMA Expr
   30     | Expr COMMA Expr .
   31     | Expr . AND Expr
   32     | Expr . OR Expr
   33     | Expr . EQ Expr
   34     | Expr . NE Expr
   35     | Expr . LT Expr
   36     | Expr . GT Expr
   37     | Expr . LE Expr
   38     | Expr . GE Expr
   39     | Expr . PLUS Expr
   40     | Expr . MINUS Expr
   41     | Expr . AST Expr
   42     | Expr . DIV Expr
   43     | Expr . MOD Expr
   49     | Expr . LSQ Expr RSQ
   71 COMMA_Expr: COMMA Expr . COMMA_Expr

    AND     shift, and go to state 77
    ASSIGN  shift, and go to state 78
    AST     shift, and go to state 79
    COMMA   shift, and go to state 125
    DIV     shift, and go to state 81
    EQ      shift, and go to state 82
    GE      shift, and go to state 83
    GT      shift, and go to state 84
    LE      shift, and go to state 85
    LSQ     shift, and go to state 86
    LT      shift, and go to state 87
    MINUS   shift, and go to state 88
    MOD     shift, and go to state 89
    NE      shift, and go to state 90
    OR      shift, and go to state 91
    PLUS    shift, and go to state 92

    AND       [reduce using rule 30 (Expr)]
    ASSIGN    [reduce using rule 30 (Expr)]
    AST       [reduce using rule 30 (Expr)]
    COMMA     [reduce using rule 30 (Expr)]
    DIV       [reduce using rule 30 (Expr)]
    EQ        [reduce using rule 30 (Expr)]
    GE        [reduce using rule 30 (Expr)]
    GT        [reduce using rule 30 (Expr)]
    LE        [reduce using rule 30 (Expr)]
    LSQ       [reduce using rule 30 (Expr)]
    LT        [reduce using rule 30 (Expr)]
    MINUS     [reduce using rule 30 (Expr)]
    MOD       [reduce using rule 30 (Expr)]
    NE        [reduce using rule 30 (Expr)]
    OR        [reduce using rule 30 (Expr)]
    PLUS      [reduce using rule 30 (Expr)]
    RPAR      reduce using rule 30 (Expr)
    RPAR      [reduce using rule 72 (Empty)]
    $default  reduce using rule 30 (Expr)

    COMMA_Expr  go to state 137
    Empty       go to state 127


State 133

   24 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI . Expr0 RPAR Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    $default  reduce using rule 72 (Empty)

    Expr   go to state 96
    Expr0  go to state 138
    Empty  go to state 98


State 134

   28 ElseStatement: ELSE . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    RETURN  shift, and go to state 51
    SEMI    shift, and go to state 52
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Statement  go to state 139
    Expr       go to state 58


State 135

   23 Statement: IF LPAR Expr RPAR Statement ElseStatement .

    $default  reduce using rule 23 (Statement)


State 136

   27 ElseStatement: Empty .

    $default  reduce using rule 27 (ElseStatement)


State 137

   71 COMMA_Expr: COMMA Expr COMMA_Expr .

    $default  reduce using rule 71 (COMMA_Expr)


State 138

   24 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 . RPAR Statement

    RPAR  shift, and go to state 140


State 139

   28 ElseStatement: ELSE Statement .

    $default  reduce using rule 28 (ElseStatement)


State 140

   24 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR . Statement

    AMP     shift, and go to state 41
    AST     shift, and go to state 42
    FOR     shift, and go to state 43
    IF      shift, and go to state 44
    LBRACE  shift, and go to state 45
    LPAR    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    PLUS    shift, and go to state 49
    RETURN  shift, and go to state 51
    SEMI    shift, and go to state 52
    ID      shift, and go to state 53
    INTLIT  shift, and go to state 54
    STRLIT  shift, and go to state 55
    CHRLIT  shift, and go to state 56

    Statement  go to state 141
    Expr       go to state 58


State 141

   24 Statement: FOR LPAR Expr0 SEMI Expr0 SEMI Expr0 RPAR Statement .

    $default  reduce using rule 24 (Statement)
